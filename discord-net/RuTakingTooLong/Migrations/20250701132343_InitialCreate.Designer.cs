// <auto-generated />
using System;
using System.Collections.Generic;
using HoloSimpID;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RuTakingTooLong.Migrations {
  [DbContext(typeof(AppDbContext))]
  [Migration("20250701132343_InitialCreate")]
  partial class InitialCreate {
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
      modelBuilder.HasAnnotation("ProductVersion", "9.0.6")
          .HasAnnotation("Relational:MaxIdentifierLength", 63);

      NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

      modelBuilder.Entity("HoloSimpID.Cart", b => {
        b.Property<int>("uDex").ValueGeneratedOnAdd().HasColumnType("integer");

        NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("uDex"));

        b.Property<string>("CartName").IsRequired().HasColumnType("text");

        b.Property<DateTime>("DateClose").HasColumnType("timestamptz");

        b.Property<DateTime>("DateDelivered").HasColumnType("timestamptz");

        b.Property<DateTime>("DateOpen").HasColumnType("timestamptz");

        b.Property<DateTime>("DatePlan").HasColumnType("timestamptz");

        b.Property<int>("OwnerDex").HasColumnType("integer");

        b.Property<decimal>("ShippingCost").HasColumnType("numeric");

        b.HasKey("uDex");

        b.HasIndex("OwnerDex");

        b.ToTable("Carts");
      });

      modelBuilder.Entity("HoloSimpID.CartItems", b => {
        b.Property<int>("cartDex").HasColumnType("integer");

        b.Property<int>("simpDex").HasColumnType("integer");

        b.Property<List<Item>>("Items").IsRequired().HasColumnType("jsonb");

        b.PrimitiveCollection<List<int>>("Quantities").IsRequired().HasColumnType("integer[]");

        b.HasKey("cartDex", "simpDex");

        b.HasIndex("simpDex");

        b.ToTable("CartItems");
      });

      modelBuilder.Entity("HoloSimpID.Simp", b => {
        b.Property<int>("uDex").ValueGeneratedOnAdd().HasColumnType("integer");

        NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("uDex"));

        b.Property<string>("dcUserName").IsRequired().HasColumnType("text");

        b.Property<string>("profilePicPath").IsRequired().HasColumnType("text");

        b.Property<string>("simpName").IsRequired().HasColumnType("text");

        b.HasKey("uDex");

        b.ToTable("Simps");
      });

      modelBuilder.Entity("HoloSimpID.Cart", b => {
        b.HasOne("HoloSimpID.Simp", "Owner")
            .WithMany()
            .HasForeignKey("OwnerDex")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.Navigation("Owner");
      });

      modelBuilder.Entity("HoloSimpID.CartItems", b => {
        b.HasOne("HoloSimpID.Cart", "Cart")
            .WithMany()
            .HasForeignKey("cartDex")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.HasOne("HoloSimpID.Simp", "Simp")
            .WithMany()
            .HasForeignKey("simpDex")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.Navigation("Cart");

        b.Navigation("Simp");
      });
#pragma warning restore 612, 618
    }
  }
}
